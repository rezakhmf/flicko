
def versions = [:]
versions.kotlin = "1.3.61"

versions.android_gradle_plugin = '4.2.1'

versions.appcompat = "1.1.0"
versions.core_ktx = "1.2.0"
versions.lifecycle = "2.3.1"
versions.constraint_layout = "1.1.3"
versions.coordinatorlayout = "1.1.0"
versions.material = "1.1.0"
versions.recyclerview = "1.1.0"
versions.cardview = "1.0.0"
versions.navigation = "2.3.5"

versions.dagger = "2.26"
versions.rx = "2.2.0"
versions.retrofit = "2.7.2"

versions.gson = "2.8.5"

versions.okhttp3 = "4.4.0"
versions.mockwebserver = "4.4.0"
versions.logging_interceptor = "4.3.1"
versions.okio = "2.4.3"
versions.okhttp_loggin_interceptor = "4.4.0"

versions.rxjava = "2.2.0"
versions.rxandroid = "2.1.1"

versions.timber = "4.7.1"

versions.picasso = "2.71828"
versions.okhttp3Downloader = "1.1.0"

versions.junit = "4.13"
versions.arch = "2.1.0"
versions.espresso_core = "3.2.0"
versions.junit_ext = "1.1.1"
versions.mockito = "2.11.0"
versions.hamcrest = "1.3"
versions.fragment_test = "1.2.2"
versions.test_runner = "1.2.0"
versions.test_rules = "1.2.0"
versions.orchestrator = "1.2.0"

ext.versions = versions

def langs = [:]

langs.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
langs.kotlin_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"

langs.kotlin_version = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

ext.langs = langs

def build_versions = [:]

build_versions.compileSdkVersion = 29
build_versions.buildToolsVersion = "29.0.2"
build_versions.applicationId = "com.farahaniconsulting.flicko"
build_versions.minSdkVersion = "26"
build_versions.target_sdk = 29
build_versions.version_code = 1
build_versions.version_name = "1.0.0"

ext.build_versions = build_versions

def deps = [:]

def androidx = [:]

androidx.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
androidx.corektx = "androidx.core:core-ktx:$versions.core_ktx"
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
androidx.coordinatorlayout = "androidx.coordinatorlayout:coordinatorlayout:$versions.coordinatorlayout"
androidx.material="com.google.android.material:material:$versions.material"
androidx.cardview = "androidx.cardview:cardview:$versions.cardview"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
androidx.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
androidx.livedata = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
androidx.lifecycle_viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
androidx.lifecycle_common_java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
androidx.lifecycle_reactivestreams_ktx = "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.lifecycle"
androidx.navigation_fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
androidx.navigation_ui = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
androidx.navigation_args = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.androidx = androidx

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter_rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit

def rx = [:]
rx.rx_java = "io.reactivex.rxjava2:rxjava:$versions.rxjava"
rx.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
deps.rx = rx

def okhttp = [:]
okhttp.okhttp= "com.squareup.okhttp3:okhttp:$versions.okhttp3"
okhttp.okio = "com.squareup.okio:okio:$versions.okio"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_loggin_interceptor"
deps.okhttp = okhttp

def gson = [:]
gson.gson = "com.google.code.gson:gson:$versions.gson"
deps.gson = gson

def log = [:]
log.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.log = log

def picasso = [:]
picasso.picasso = "com.squareup.picasso:picasso:$versions.picasso"
picasso.okhttp3Downloader = "com.jakewharton.picasso:picasso2-okhttp3-downloader:$versions.okhttp3Downloader"
deps.picasso = picasso

def test = [:]

test.junit =  "junit:junit:$versions.junit"
test.mockito = "org.mockito:mockito-inline:$versions.mockito"
test.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"

test.arch_core = "androidx.arch.core:core-testing:$versions.arch"

test.junit_ext = "androidx.test.ext:junit:$versions.junit_ext"
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso_core"
test.test_runner = "androidx.test:runner:$versions.test_runner"
test.test_rules = "androidx.test:rules:$versions.test_rules"
test.test_fragment = "androidx.fragment:fragment-testing:$versions.fragment_test"
test.mockwebserver = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
test.orchestrator = "androidx.test:orchestrator:$versions.orchestrator"

deps.test = test

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos